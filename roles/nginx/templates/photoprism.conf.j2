{# roles/nginx/templates/photoprism.conf.j2 #}
{% set photoprism_ip = reverse_proxy.nas_ip %}
{% set photoprism_port = reverse_proxy.ports.photoprism %}
{% for domain in domains.nginx.photoprism %}
server {
    listen {{ ports.internal.nginx_https }} ssl http2 proxy_protocol;
    server_name {{ domain }};

    # Get real IP from HAProxy
    set_real_ip_from 127.0.0.1;
    real_ip_header proxy_protocol;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Proxy settings
    client_max_body_size 20000M;
    proxy_buffering off;
    keepalive_timeout 70;

    location / {
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP       $proxy_protocol_addr;
        proxy_set_header X-Forwarded-For $proxy_protocol_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass http://{{ photoprism_ip }}:{{ photoprism_port }};
    }
}
{% endfor %}

# HTTP redirect server block
server {
    listen 80 proxy_protocol;
    server_name {% for domain in domains.nginx.photoprism %}{{ domain }} {% endfor %};

    set_real_ip_from 127.0.0.1;
    real_ip_header proxy_protocol;

    return 301 https://$host$request_uri;
}
