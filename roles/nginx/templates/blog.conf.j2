{# roles/nginx/templates/blog.conf.j2 #}
{% for domain in domains.nginx.blog %}
server {
    listen {{ ports.internal.nginx_https }} ssl http2 proxy_protocol;
    server_name {{ domain }};

    # Get real IP from HAProxy
    set_real_ip_from 127.0.0.1;
    real_ip_header proxy_protocol;

    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Basic settings
    keepalive_timeout 70;
    client_max_body_size 20M;
    port_in_redirect off;
    root /var/www/blog;
    index index.html;

    # Compression
    gzip_static on;
    gzip_vary on;

    # Main location block with Vitepress recommendations
    location / {
        try_files $uri $uri.html $uri/ =404;
        error_page 404 /404.html;
        error_page 403 /404.html;
    }

    # Assets handling with aggressive caching
    location ^~ /assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Custom error page
    location = /404.html {
        internal;
        root /var/www/blog;
    }

    # Protect hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
{% endfor %}

# HTTP redirect server block
server {
    listen 80 proxy_protocol;
    server_name {% for domain in domains.nginx.blog %}{{ domain }} {% endfor %};

    set_real_ip_from 127.0.0.1;
    real_ip_header proxy_protocol;

    return 301 https://$host$request_uri;
}
