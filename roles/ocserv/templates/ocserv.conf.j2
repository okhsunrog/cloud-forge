# Authentication method
auth = "plain[passwd= {{ instance_paths.passwd_file }} ]"

# TCP listening host and port
listen-host = {{ instance.tcp_listen_host | default(ocserv_default_settings.tcp_listen_host) }}
tcp-port = {{ instance.tcp_port | default(ocserv_default_settings.tcp_port) }}

{% if instance.udp_enabled | default(ocserv_default_settings.udp_enabled) %}
# UDP settings
udp-port = {{ instance.udp_port | default(ocserv_default_settings.udp_port) }}
udp-listen-host = {{ instance.udp_listen_host | default(ocserv_default_settings.udp_listen_host) }}
{% endif %}


# User and group to run as
run-as-user = ocserv
run-as-group = ocserv

# Socket file
socket-file = {{ instance_paths.socket_file }}

# Server certificate and key
server-cert = "/etc/letsencrypt/live/{{ instance.domain }}/fullchain.pem"
server-key = "/etc/letsencrypt/live/{{ instance.domain }}/privkey.pem"

# Client limits
max-clients = {{ instance.max_clients | default(ocserv_default_settings.max_clients) }}
max-same-clients = {{ instance.max_same_clients | default(ocserv_default_settings.max_same_clients) }}

# Network settings
listen-proxy-proto = true
rate-limit-ms = 100
keepalive = 30
dpd = 60
mobile-dpd = 300
switch-to-tcp-timeout = 25
session-timeout = 86400

# Authentication timeouts
auth-timeout = 300
cookie-timeout = 86400

# TLS priorities
tls-priorities = "NORMAL:%SERVER_PRECEDENCE:-VERS-SSL3.0:-VERS-TLS1.0:-VERS-TLS1.1:+VERS-TLS1.3:-VERS-DTLS-ALL:+VERS-DTLS1.2"

# Re-authentication and banning
min-reauth-time = 1
max-ban-score = 180
ban-reset-time = 1200

# Session settings
deny-roaming = false
rekey-time = 172800
rekey-method = ssl

# Logging and control
use-occtl = true
log-level = 2

# MTU setting
mtu = {{ instance.mtu | default(ocserv_default_settings.mtu) }}
try-mtu-discovery = true

# Device name
device = {{ instance.device | default(ocserv_default_settings.device) }}

# Whether the generated IPs will be predictable, i.e., IP stays the
# same for the same user when possible.
predictable-ips = true

# The default domain to be advertised. Multiple domains (functional on
# openconnect clients) can be provided in a space separated list.
default-domain = "{{ ocserv_domain }}"

# IPv4 network
ipv4-network = {{ instance.ipv4_network }}
tunnel-all-dns = true

# DNS servers
{%- for dns_server in instance.dns_servers | default(ocserv_default_settings.dns_servers) %}
dns = {{ dns_server }}
{%- endfor %}

# Routes
route = default

# Config per user and group
config-per-user = {{ instance_paths.config_per_user }}
config-per-group = {{ instance_paths.config_per_group }}

# Client compatibility
cisco-client-compat = true
dtls-legacy = false
cisco-svc-client-compat = false
client-bypass-protocol = false

# Camouflage settings
camouflage = true
camouflage_secret = "{{ instance.camouflage_secret | default(ocserv_default_settings.camouflage_secret) }}"
camouflage_realm = "{{ instance.camouflage_realm | default(ocserv_default_settings.camouflage_realm) }}"


# Traffic shaping settings
# Unset to enable bandwidth restrictions (in bytes/sec). The
# setting here is global, but can also be set per user or per group.
# The RX direction refers to received data on the server from the
# VPN client, and the TX refers to transmitted data by the server
# to the client.
{%- if instance.bandwidth | default(ocserv_default_settings.bandwidth) | int > 0 %}
rx-data-per-sec = {{ instance.bandwidth | default(ocserv_default_settings.bandwidth) }}
tx-data-per-sec = {{ instance.bandwidth | default(ocserv_default_settings.bandwidth) }}
{%- endif %}
