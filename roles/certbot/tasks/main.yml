---
- name: Install Certbot and dependencies
  apt:
    name:
      - certbot
      - python3-certbot
      - python3-certbot-nginx
      - python3-openssl
    state: present
    update_cache: yes

- name: Check if certificates exist and are up to date
  shell: |
    certbot certificates 2>/dev/null | grep "VALID:" | grep -v "EXPIRING SOON"
  register: cert_status
  changed_when: false
  failed_when: false

- name: Check if nginx is running
  service_facts:
  register: services_state

- name: Set nginx running fact
  set_fact:
    nginx_running: "{{ 'nginx.service' in services_state.ansible_facts.services and services_state.ansible_facts.services['nginx.service'].state == 'running' }}"

- name: Stop nginx if running
  systemd:
    name: nginx
    state: stopped
  when: 
    - cert_status.rc != 0
    - nginx_running
  
- name: Debug all_domains raw
  debug:
    var: all_domains
    verbosity: 0

- name: Convert domains to proper list
  set_fact:
    domains_list: "{{ all_domains | from_yaml | flatten | unique | list }}"

- name: Debug final domains list
  debug:
    var: domains_list

- name: Obtain certificates for each domain
  shell: >
    certbot certonly --standalone --non-interactive --agree-tos -m {{ email }} 
    -d {{ item }}
  loop: "{{ domains_list }}"
  when: cert_status.rc != 0

- name: Start nginx if it was running
  systemd:
    name: nginx
    state: started
  when: 
    - cert_status.rc != 0
    - nginx_running
